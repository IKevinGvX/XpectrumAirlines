@page
@model IndexModel
@{
    ViewData["Title"] = "Xpectrum Airlines";
}


<style>
    :root {
        --primary: #0a192f;
        --secondary: #172a45;
        --accent: #64ffda;
        --text: #ccd6f6;
        --text-secondary: #8892b0;
        --background: #0a192f;
        --card: #112240;
        --border: #233554;
        --success: #64ffda;
        --warning: #ffb74d;
        --danger: #ff5252;
        --hero-bg: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        --hero-text: #ffffff;
    }

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: 'SF Pro Display', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        background-color: var(--background);
        color: var(--text);
        line-height: 1.6;
    }

    .container {
        width: 100%;
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 1.5rem;
    }

    /* Header */
    .header {
        padding: 1rem 0;
        background-color: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        position: sticky;
        top: 0;
        z-index: 100;
        border-bottom: 1px solid rgba(0, 0, 0, 0.1);
    }

    .header-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .logo {
        font-size: 1.5rem;
        font-weight: 700;
        color: #2563eb;
        letter-spacing: 1px;
    }

    /* Hero Section */
    .hero {
        
        min-height: 500px;
        display: flex;
        align-items: center;
        position: relative;
        overflow: hidden;
    }

        .hero::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-image: radial-gradient(circle at 20% 80%, rgba(255, 255, 255, 0.3) 0%, transparent 50%), radial-gradient(circle at 80% 20%, rgba(255, 255, 255, 0.2) 0%, transparent 50%), radial-gradient(circle at 40% 40%, rgba(255, 255, 255, 0.1) 0%, transparent 50%);
        }

    .hero-content {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 3rem;
        align-items: center;
        position: relative;
        z-index: 2;
    }

    .hero-text {
        color: white;
    }

    .hero-title {
        font-size: 3.5rem;
        font-weight: 800;
        margin-bottom: 1rem;
        letter-spacing: -1px;
        line-height: 1.1;
    }

    .hero-subtitle {
        font-size: 1.5rem;
        margin-bottom: 1.5rem;
        opacity: 0.9;
        font-weight: 300;
    }

    .hero-description {
        font-size: 1.1rem;
        margin-bottom: 2rem;
        opacity: 0.8;
        line-height: 1.6;
    }

    .hero-btn {
        background-color: #2c374d;
        color: white;
        border: none;
        padding: 1rem 2rem;
        border-radius: 8px;
        font-size: 1rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
    }

        .hero-btn:hover {
            background-color: #eee5d0;
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(30, 64, 175, 0.6);
        }

    .hero-visual {
        display: flex;
        justify-content: center;
        align-items: center;
        position: relative;
    }

    .airplane {
        width: 300px;
        height: 200px;
        position: relative;
        animation: float 6s ease-in-out infinite;
    }

        .airplane svg {
            width: 100%;
            height: 100%;
            filter: drop-shadow(0 10px 20px rgba(0, 0, 0, 0.2));
        }

    .location-pin {
        position: absolute;
        width: 30px;
        height: 30px;
        background-color: #3b82f6;
        border-radius: 50% 50% 50% 0;
        transform: rotate(-45deg);
        animation: bounce 2s infinite;
    }

        .location-pin::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%) rotate(45deg);
            width: 12px;
            height: 12px;
            background-color: white;
            border-radius: 50%;
        }

    .pin-1 {
        top: 10%;
        left: 10%;
        animation-delay: 0s;
    }

    .pin-2 {
        top: 20%;
        right: 15%;
        animation-delay: 0.5s;
    }

    .pin-3 {
        bottom: 30%;
        left: 20%;
        animation-delay: 1s;
    }

    .pin-4 {
        bottom: 15%;
        right: 10%;
        animation-delay: 1.5s;
    }

    .cloud {
        position: absolute;
        background-color: rgba(255, 255, 255, 0.8);
        border-radius: 50px;
        opacity: 0.7;
        animation: drift 20s infinite linear;
    }

    .cloud-1 {
        width: 80px;
        height: 40px;
        top: 15%;
        left: -80px;
    }

    .cloud-2 {
        width: 60px;
        height: 30px;
        top: 70%;
        left: -60px;
        animation-delay: -10s;
    }

    .cloud-3 {
        width: 100px;
        height: 50px;
        top: 40%;
        left: -100px;
        animation-delay: -15s;
    }

    /* Main Content Styles (keeping existing styles) */
    .main {
        padding: 4rem 0;
        background-color: var(--background);
    }

    .section-title {
        font-size: 1.75rem;
        font-weight: 700;
        margin-bottom: 2rem;
        color: var(--text);
        position: relative;
        display: inline-block;
    }

        .section-title::after {
            content: '';
            position: absolute;
            bottom: -8px;
            left: 0;
            width: 60%;
            height: 2px;
            background-color: var(--accent);
        }

    .table-wrapper {
        background-color: var(--card);
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 10px 30px -15px rgba(2, 12, 27, 0.7);
        margin-bottom: 3rem;
        border: 1px solid var(--border);
    }

    .flights-table {
        width: 100%;
        border-collapse: collapse;
        overflow: hidden;
    }

        .flights-table th {
            background-color: var(--secondary);
            color: var(--accent);
            font-weight: 600;
            text-align: left;
            padding: 1.25rem 1rem;
            font-size: 0.875rem;
            letter-spacing: 0.5px;
            text-transform: uppercase;
        }

        .flights-table td {
            padding: 1.25rem 1rem;
            border-bottom: 1px solid var(--border);
            font-size: 0.9375rem;
            color: var(--text);
        }

        .flights-table tr:last-child td {
            border-bottom: none;
        }

        .flights-table tr:hover td {
            background-color: rgba(100, 255, 218, 0.05);
        }

    .status {
        display: inline-flex;
        align-items: center;
        padding: 0.35rem 0.75rem;
        border-radius: 4px;
        font-size: 0.75rem;
        font-weight: 600;
        letter-spacing: 0.5px;
    }

        .status::before {
            content: '';
            display: inline-block;
            width: 8px;
            height: 8px;
            border-radius: 50%;
            margin-right: 8px;
        }

    .status-on-time {
        background-color: rgba(100, 255, 218, 0.1);
        color: var(--success);
    }

        .status-on-time::before {
            background-color: var(--success);
        }

    .status-delayed {
        background-color: rgba(255, 183, 77, 0.1);
        color: var(--warning);
    }

        .status-delayed::before {
            background-color: var(--warning);
        }

    .status-cancelled {
        background-color: rgba(255, 82, 82, 0.1);
        color: var(--danger);
    }

        .status-cancelled::before {
            background-color: var(--danger);
        }

    .empty-state {
        padding: 3rem 0;
        text-align: center;
        color: var(--text-secondary);
    }

    .actions {
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;
        justify-content: center;
    }

    .action-btn {
        background-color: transparent;
        color: var(--accent);
        border: 1px solid var(--accent);
        border-radius: 4px;
        padding: 0.75rem 1.5rem;
        font-size: 0.875rem;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.2s ease;
        letter-spacing: 0.5px;
        position: relative;
        overflow: hidden;
        z-index: 1;
    }

        .action-btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 0;
            height: 100%;
            background-color: var(--accent);
            transition: all 0.3s ease;
            z-index: -1;
        }

        .action-btn:hover {
            color: var(--primary);
        }

            .action-btn:hover::before {
                width: 100%;
            }

    .footer {
        padding: 2rem 0;
        text-align: center;
        border-top: 1px solid var(--border);
        margin-top: 2rem;
        background-color: var(--background);
    }

    .footer-text {
        color: var(--text-secondary);
        font-size: 0.875rem;
    }

    .imagen-derecha {
        position:absolute;
        text-align: right;
        top: -6%
        
        
    }
    .btn-download {
        background-color: #2c374d;
        color: white;
        border: none;
        padding: 0.5rem 1rem;
        border-radius: 4px;
        font-size: 0.875rem;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .btn-download:hover {
        background-color: #eee5d0;
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(30, 64, 175, 0.6);
    }

    .btn-download:focus {
        outline: none;
    }

    .qr-container {
        text-align: center;
    }

    .qr-image {
        width: 150px; /* Ajustar tama√±o del QR */
        height: 150px;
        border-radius: 10px;
    }
        .imagen-derecha img {
           
            width: 40%;
            height: auto;
            border-radius:10%;
        }

    .filters {
    display: flex;
    gap: 2rem;
    justify-content: center;
    align-items: center;
    margin: 2rem 0;
    background: #0a192f;
    border-radius: 18px;
    box-shadow: 0 4px 24px #0003;
    padding: 1.5rem 2.5rem;
    border: 1px solid rgba(42, 82, 152, 0.18);
    transition: background 0.3s;
    width: 58%;
    margin-left: auto;
    margin-right: auto;
}

.filters label {
    font-weight: 500;
    color: #e0e0e0;
    margin-right: 0.5rem;
    letter-spacing: 1px;
}

.filters select {
    padding: 0.5rem 1.2rem;
    border-radius: 8px;
    border: 1.5px solid #2a5298;
    background: rgba(35, 39, 47, 0.25);
    color: #fff;
    font-size: 1.08rem;
    outline: none;
    transition: border 0.2s, background 0.2s;
    backdrop-filter: blur(4px);
    -webkit-backdrop-filter: blur(4px);
    box-shadow: 0 2px 8px #2a529866;
}

.filters select:focus {
    border: 1.5px solid #64ffda;
    background: rgba(35, 39, 47, 0.40);
    color: #fff;
}
    /* Agregar transici√≥n de hover en los botones de acci√≥n */
    .action-btn {
        transition: all 0.3s ease-in-out;
    }

        .action-btn:hover {
            transform: scale(1.05);
            box-shadow: 0px 6px 15px rgba(0, 0, 0, 0.2);
        }

    /* Mejorar la visibilidad de los botones de descarga de QR */
    .btn-download {
        transition: background-color 0.3s ease, transform 0.2s ease;
    }

        .btn-download:hover {
            background-color: #64ffda;
            transform: translateY(-3px);
        }

    .footer {
        padding: 3rem 0;
        background-color: var(--background);
        color: var(--text-secondary);
        text-align: center;
        border-top: 1px solid var(--border);
        margin-top: 3rem;
    }

    .footer-links {
        display: flex;
        justify-content: center;
        gap: 2rem;
        margin-top: 1.5rem;
    }

        .footer-links a {
            color: var(--text-secondary);
            font-size: 0.875rem;
            text-decoration: none;
            font-weight: 500;
        }

            .footer-links a:hover {
                color: var(--accent);
            }

    .filters {
        margin-bottom: 1rem;
        display: flex;
        gap: 1rem;
        justify-content: center;
        margin-top: 1rem;
    }

        .filters label {
            color: var(--text);
        }

        .filters input {
            padding: 0.5rem;
            font-size: 1rem;
            border: 1px solid var(--border);
            border-radius: 4px;
            width: 150px;
        }

.choices__list--dropdown, .choices__list[aria-expanded] {
    background: rgba(35, 39, 47, 0.45) !important;
    backdrop-filter: blur(12px);
    -webkit-backdrop-filter: blur(12px);
    border-radius: 14px;
    box-shadow: 0 4px 24px #0003;
    color: #fff;
}
.choices__item--selectable {
    color: #e0e0e0;
    transition: background 0.2s, color 0.2s;
}
.choices__item--selectable.is-highlighted {
    background: #2a5298;
    color: #fff;
}

.trasparente {
    background: rgba(35, 39, 47, 0.45);
    border-radius: 14px;
    box-shadow: 0 4px 24px #0003;
    margin-top: 0.5rem;
    min-width: 210px;
    border: none;
    backdrop-filter: blur(12px);
    -webkit-backdrop-filter: blur(12px);
    transition: background 0.3s, backdrop-filter 0.3s;
}

/* Estilo para las opciones de los selects */
select option {
    background-color: #0a192f; /* Fondo azul oscuro */
    color: #ffffff; /* Texto blanco */
    padding: 10px 15px;
    border: 1px solid rgba(100, 255, 218, 0.2); /* Borde sutil */
    margin: 2px 0;
    border-radius: 6px;
}

/* Efecto hover en las opciones */
select option:hover,
select option:focus {
    background-color: #112240 !important; /* Color ligeramente m√°s claro al pasar el rat√≥n */
    color: white !important;
}

/* Opci√≥n seleccionada */
select option:checked {
    background-color: #1e4b8a !important; /* Color para la opci√≥n seleccionada */
    font-weight: 500;
}

/* Ocultar barra de desplazamiento en los selects */
select::-webkit-scrollbar {
    display: none; /* Chrome, Safari, Opera */
}
</style> 

<!-- Hero Section -->
<section class="hero">
    <div class="container">
        <div class="hero-content">
            <div class="hero-text">
                <h1 class="hero-title">XPECTRUM<br>AIRLINES</h1>
                <p class="hero-subtitle">Travel With Us</p>
                <p class="hero-description">
                    Descubre el mundo con Xpectrum Airlines. Ofrecemos vuelos seguros,
                    c√≥modos y puntuales a los destinos m√°s incre√≠bles del planeta.
                    Tu pr√≥xima aventura comienza aqu√≠.
                </p>
                <div class="imagen-derecha">
                    <img src="~/img/loggo.jpg" alt="logo" />
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Filtros de Origen y Destino -->
<div class="filters">
    <label for="filter-origin">Origen</label>
    <select id="filter-origin" onchange="filterVuelos()">
        <option value="">Selecciona un Origen</option>
        @foreach (var aeropuerto in Model.Vuelos.Select(v => v.AeropuertoOrigen).Distinct().OrderBy(a => a))
        {
            <option value="@aeropuerto">@aeropuerto</option>
        }
    </select>

    <label for="filter-destination">Destino</label>
    <select id="filter-destination" onchange="filterVuelos()">
        <option value="">Selecciona un Destino</option>
        @foreach (var pais in Model.Vuelos.Select(v => v.PaisOrigen).Distinct().OrderBy(p => p))
        {
            <option value="@pais">@pais</option>
        }
    </select>
</div>

<!-- Main Content -->
<main class="main" id="flights-section">
    <div class="container">
        <h2 class="section-title">Vuelos del Mes</h2>

        <!-- Table Wrapper -->
        <div class="table-wrapper">
            <table class="flights-table">
                <thead>
                    <tr>
                        <th>C√≥digo Vuelo</th>
                        <th>Fecha Salida</th>
                        <th>Hora Salida</th>
                        <th>Fecha Llegada</th>
                        <th>Hora Llegada</th>
                        <th>Origen</th>
                        <th>Destino</th>
                        <th>Estado</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Vuelos != null && Model.Vuelos.Any())
                    {
                        foreach (var vuelo in Model.Vuelos)
                        {
                            <tr data-codigo-vuelo="@vuelo.CodigoVuelo"
                                data-fecha-salida="@vuelo.FechaSalida"
                                data-hora-salida="@vuelo.HoraSalida"
                                data-fecha-llegada="@vuelo.FechaLlegada"
                                data-hora-llegada="@vuelo.HoraLlegada"
                                data-aeropuerto-origen="@vuelo.AeropuertoOrigen"
                                data-ciudad-origen="@vuelo.CiudadOrigen"
                                data-pais-origen="@vuelo.PaisOrigen"
                                data-estado="@vuelo.EstadoVuelo">
                                <td>@vuelo.CodigoVuelo</td>
                                <td>@(vuelo.FechaSalida.HasValue? vuelo.FechaSalida.Value.ToString("dd/MM/yyyy") : "N/A")</td>
                                <td>@vuelo.HoraSalida</td>
                                <td>@vuelo.FechaLlegada</td>
                                <td>@vuelo.HoraLlegada</td>
                                <td>@vuelo.AeropuertoOrigen</td>
                                <td>@vuelo.PaisOrigen</td>
                                <td>
                                    @{
                                        string statusClass = "status-on-time";
                                        if (vuelo.EstadoVuelo.ToLower().Contains("retrasa"))
                                        {
                                            statusClass = "status-delayed";
                                        }
                                        else if (vuelo.EstadoVuelo.ToLower().Contains("cancel"))
                                        {
                                            statusClass = "status-cancelled";
                                        }
                                    }
                                    <span class="status @statusClass">@vuelo.EstadoVuelo</span>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="10" class="empty-state">No hay vuelos disponibles en este momento</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</main>

<!-- Choices.js JS -->
<script src="https://cdn.jsdelivr.net/npm/choices.js/public/assets/scripts/choices.min.js"></script>
<script>
document.addEventListener('DOMContentLoaded', function () {
    const originSelect = document.getElementById('filter-origin');
    const destSelect = document.getElementById('filter-destination');
    if (originSelect) new Choices(originSelect, {
        searchEnabled: false,
        itemSelectText: '',
        classNames: {
            containerOuter: 'choices glass-dropdown'
        }
    });
    if (destSelect) new Choices(destSelect, {
        searchEnabled: false,
        itemSelectText: '',
        classNames: {
            containerOuter: 'choices glass-dropdown'
        }
    });
});
</script>

<script>

    // Filter flights based on selected Origin and Destination
    function filterVuelos() {
        const originFilter = document.getElementById('filter-origin').value.toLowerCase();
        const destinationFilter = document.getElementById('filter-destination').value.toLowerCase();
        const vuelos = document.querySelectorAll('tr[data-codigo-vuelo]');

        vuelos.forEach(vueloRow => {
            const aeropuertoOrigen = vueloRow.getAttribute('data-aeropuerto-origen').toLowerCase();
            const paisOrigen = vueloRow.getAttribute('data-pais-origen').toLowerCase();

            const matchesOrigin = !originFilter || aeropuertoOrigen.includes(originFilter);
            const matchesDestination = !destinationFilter || paisOrigen.includes(destinationFilter);

            if (matchesOrigin && matchesDestination) {
                vueloRow.style.display = '';
            } else {
                vueloRow.style.display = 'none';
            }
        });
    }

    // Initialize QR generation on page load
    window.onload = function() {
        generateQRs();
    };
</script>



<!-- Footer -->
<footer class="footer"></footer>

<script>
    function verVuelos() {
        window.location.href = '/Promotions/Vuelos';
    }

    function verPromociones() {
        window.location.href = '/Promotions/Promociones';
    }

    function verHistorial() {
        window.location.href = '/Promotions/Historial';
    }

    function scrollToFlights() {
        document.getElementById('flights-section').scrollIntoView({
            behavior: 'smooth'
        });
    }
</script>

<!-- Footer con enlaces adicionales -->
<footer class="footer">
    <div class="footer-text">
        <p>&copy; 2025 Xpectrum Airlines. Todos los derechos reservados.</p>
    </div>
    <div class="footer-links">
        <a href="/about">Acerca de</a>
        <a href="/terms">T√©rminos de Servicio</a>
        <a href="/contact">Contacto</a>
    </div>
</footer>

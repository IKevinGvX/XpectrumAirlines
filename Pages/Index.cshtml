@page
@model IndexModel
@{
    ViewData["Title"] = "Xpectrum Airlines";
}

<style>
    :root {
        --primary: #0a192f;
        --secondary: #172a45;
        --accent: #64ffda;
        --text: #ccd6f6;
        --text-secondary: #8892b0;
        --background: #0a192f;
        --card: #112240;
        --border: #233554;
        --success: #64ffda;
        --warning: #ffb74d;
        --danger: #ff5252;
        --hero-bg: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        --hero-text: #ffffff;
    }

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: 'SF Pro Display', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        background-color: var(--background);
        color: var(--text);
        line-height: 1.6;
    }

    .container {
        width: 100%;
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 1.5rem;
    }

    /* Header */
    .header {
        padding: 1rem 0;
        background-color: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        position: sticky;
        top: 0;
        z-index: 100;
        border-bottom: 1px solid rgba(0, 0, 0, 0.1);
    }

    .header-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .logo {
        font-size: 1.5rem;
        font-weight: 700;
        color: #2563eb;
        letter-spacing: 1px;
    }

    /* Hero Section */
    .hero {
        
        min-height: 500px;
        display: flex;
        align-items: center;
        position: relative;
        overflow: hidden;
    }

        .hero::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-image: radial-gradient(circle at 20% 80%, rgba(255, 255, 255, 0.3) 0%, transparent 50%), radial-gradient(circle at 80% 20%, rgba(255, 255, 255, 0.2) 0%, transparent 50%), radial-gradient(circle at 40% 40%, rgba(255, 255, 255, 0.1) 0%, transparent 50%);
        }

    .hero-content {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 3rem;
        align-items: center;
        position: relative;
        z-index: 2;
    }

    .hero-text {
        color: white;
    }

    .hero-title {
        font-size: 3.5rem;
        font-weight: 800;
        margin-bottom: 1rem;
        letter-spacing: -1px;
        line-height: 1.1;
    }

    .hero-subtitle {
        font-size: 1.5rem;
        margin-bottom: 1.5rem;
        opacity: 0.9;
        font-weight: 300;
    }

    .hero-description {
        font-size: 1.1rem;
        margin-bottom: 2rem;
        opacity: 0.8;
        line-height: 1.6;
    }

    .hero-btn {
        background-color: #2c374d;
        color: white;
        border: none;
        padding: 1rem 2rem;
        border-radius: 8px;
        font-size: 1rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
    }

        .hero-btn:hover {
            background-color: #eee5d0;
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(30, 64, 175, 0.6);
        }

    .hero-visual {
        display: flex;
        justify-content: center;
        align-items: center;
        position: relative;
    }

    .airplane {
        width: 300px;
        height: 200px;
        position: relative;
        animation: float 6s ease-in-out infinite;
    }

        .airplane svg {
            width: 100%;
            height: 100%;
            filter: drop-shadow(0 10px 20px rgba(0, 0, 0, 0.2));
        }

    .location-pin {
        position: absolute;
        width: 30px;
        height: 30px;
        background-color: #3b82f6;
        border-radius: 50% 50% 50% 0;
        transform: rotate(-45deg);
        animation: bounce 2s infinite;
    }

        .location-pin::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%) rotate(45deg);
            width: 12px;
            height: 12px;
            background-color: white;
            border-radius: 50%;
        }

    .pin-1 {
        top: 10%;
        left: 10%;
        animation-delay: 0s;
    }

    .pin-2 {
        top: 20%;
        right: 15%;
        animation-delay: 0.5s;
    }

    .pin-3 {
        bottom: 30%;
        left: 20%;
        animation-delay: 1s;
    }

    .pin-4 {
        bottom: 15%;
        right: 10%;
        animation-delay: 1.5s;
    }

    .cloud {
        position: absolute;
        background-color: rgba(255, 255, 255, 0.8);
        border-radius: 50px;
        opacity: 0.7;
        animation: drift 20s infinite linear;
    }

    .cloud-1 {
        width: 80px;
        height: 40px;
        top: 15%;
        left: -80px;
    }

    .cloud-2 {
        width: 60px;
        height: 30px;
        top: 70%;
        left: -60px;
        animation-delay: -10s;
    }

    .cloud-3 {
        width: 100px;
        height: 50px;
        top: 40%;
        left: -100px;
        animation-delay: -15s;
    }

    /* Main Content Styles (keeping existing styles) */
    .main {
        padding: 4rem 0;
        background-color: var(--background);
    }

    .section-title {
        font-size: 1.75rem;
        font-weight: 700;
        margin-bottom: 2rem;
        color: var(--text);
        position: relative;
        display: inline-block;
    }

        .section-title::after {
            content: '';
            position: absolute;
            bottom: -8px;
            left: 0;
            width: 60%;
            height: 2px;
            background-color: var(--accent);
        }

    .table-wrapper {
        background-color: var(--card);
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 10px 30px -15px rgba(2, 12, 27, 0.7);
        margin-bottom: 3rem;
        border: 1px solid var(--border);
    }

    .flights-table {
        width: 100%;
        border-collapse: collapse;
        overflow: hidden;
    }

        .flights-table th {
            background-color: var(--secondary);
            color: var(--accent);
            font-weight: 600;
            text-align: left;
            padding: 1.25rem 1rem;
            font-size: 0.875rem;
            letter-spacing: 0.5px;
            text-transform: uppercase;
        }

        .flights-table td {
            padding: 1.25rem 1rem;
            border-bottom: 1px solid var(--border);
            font-size: 0.9375rem;
            color: var(--text);
        }

        .flights-table tr:last-child td {
            border-bottom: none;
        }

        .flights-table tr:hover td {
            background-color: rgba(100, 255, 218, 0.05);
        }

    .status {
        display: inline-flex;
        align-items: center;
        padding: 0.35rem 0.75rem;
        border-radius: 4px;
        font-size: 0.75rem;
        font-weight: 600;
        letter-spacing: 0.5px;
    }

        .status::before {
            content: '';
            display: inline-block;
            width: 8px;
            height: 8px;
            border-radius: 50%;
            margin-right: 8px;
        }

    .status-on-time {
        background-color: rgba(100, 255, 218, 0.1);
        color: var(--success);
    }

        .status-on-time::before {
            background-color: var(--success);
        }

    .status-delayed {
        background-color: rgba(255, 183, 77, 0.1);
        color: var(--warning);
    }

        .status-delayed::before {
            background-color: var(--warning);
        }

    .status-cancelled {
        background-color: rgba(255, 82, 82, 0.1);
        color: var(--danger);
    }

        .status-cancelled::before {
            background-color: var(--danger);
        }

    .empty-state {
        padding: 3rem 0;
        text-align: center;
        color: var(--text-secondary);
    }

    .actions {
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;
        justify-content: center;
    }

    .action-btn {
        background-color: transparent;
        color: var(--accent);
        border: 1px solid var(--accent);
        border-radius: 4px;
        padding: 0.75rem 1.5rem;
        font-size: 0.875rem;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.2s ease;
        letter-spacing: 0.5px;
        position: relative;
        overflow: hidden;
        z-index: 1;
    }

        .action-btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 0;
            height: 100%;
            background-color: var(--accent);
            transition: all 0.3s ease;
            z-index: -1;
        }

        .action-btn:hover {
            color: var(--primary);
        }

            .action-btn:hover::before {
                width: 100%;
            }

    .footer {
        padding: 2rem 0;
        text-align: center;
        border-top: 1px solid var(--border);
        margin-top: 2rem;
        background-color: var(--background);
    }

    .footer-text {
        color: var(--text-secondary);
        font-size: 0.875rem;
    }

    .imagen-derecha {
        position:absolute;
        text-align: right;
        top: -6%
        
        
    }
    .btn-download {
        background-color: #2c374d;
        color: white;
        border: none;
        padding: 0.5rem 1rem;
        border-radius: 4px;
        font-size: 0.875rem;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .btn-download:hover {
        background-color: #eee5d0;
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(30, 64, 175, 0.6);
    }

    .btn-download:focus {
        outline: none;
    }

    .qr-container {
        text-align: center;
    }

    .qr-image {
        width: 150px; /* Ajustar tamaño del QR */
        height: 150px;
        border-radius: 10px;
    }
        .imagen-derecha img {
           
            width: 40%;
            height: auto;
            border-radius:10%;
        }

</style>

<!-- Header -->
<!-- Hero Section -->
<section class="hero">
    <div class="container">
        <div class="hero-content">
            <div class="hero-text">
                <h1 class="hero-title">XPECTRUM<br>AIRLINES</h1>
                <p class="hero-subtitle">Travel With Us</p>
                <p class="hero-description">
                    Descubre el mundo con Xpectrum Airlines. Ofrecemos vuelos seguros,
                    cómodos y puntuales a los destinos más increíbles del planeta.
                    Tu próxima aventura comienza aquí.
                </p>
                <div class="imagen-derecha">
                    <img src="~/img/loggo.jpg" alt="logo" />
                </div>
                <button class="hero-btn" onclick="scrollToFlights()">Explorar Vuelos</button>
            </div>
        </div>
    </div>
</section>

<!-- Main Content -->
<main class="main" id="flights-section">
    <div class="container">
        <h2 class="section-title">Vuelos del Mes</h2>

        <!-- Table Wrapper -->
        <div class="table-wrapper">
            <table class="flights-table">
                <thead>
                    <tr>
                        <th>Código Vuelo</th>
                        <th>Fecha Salida</th>
                        <th>Hora Salida</th>
                        <th>Fecha Llegada</th>
                        <th>Hora Llegada</th>
                        <th>Origen</th>
                        <th>Destino</th>
                        <th>Estado</th>
                        <th>Visualizar QR</th> <!-- Nueva columna para mostrar QR -->
                        <th>Descargar QR</th>  <!-- Columna para descargar el QR -->
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Vuelos != null && Model.Vuelos.Any())
                    {
                        foreach (var vuelo in Model.Vuelos)
                        {
                            <tr>
                                <td>@vuelo.CodigoVuelo</td>
                                <td>@(vuelo.FechaSalida.HasValue? vuelo.FechaSalida.Value.ToString("dd/MM/yyyy") : "N/A")</td>
                                <td>@vuelo.HoraSalida</td>
                                <td>@vuelo.FechaLlegada</td>
                                <td>@vuelo.HoraLlegada</td>
                                <td>@vuelo.AeropuertoOrigen</td>
                                <td>@vuelo.PaisOrigen</td>
                                <td>
                                    @{
                                        string statusClass = "status-on-time";
                                        if (vuelo.EstadoVuelo.ToLower().Contains("retrasa"))
                                        {
                                            statusClass = "status-delayed";
                                        }
                                        else if (vuelo.EstadoVuelo.ToLower().Contains("cancel"))
                                        {
                                            statusClass = "status-cancelled";
                                        }
                                    }
                                    <span class="status @statusClass">@vuelo.EstadoVuelo</span>
                                </td>
                                <td>
                                    <!-- Contenedor para el QR Code -->
                                    <div id="qrcode-@vuelo.CodigoVuelo" class="qr-container">
                                        <!-- El QR se generará aquí -->
                                    </div>
                                </td>
                                <td>
                                    <!-- Botón para descargar el QR -->
                                    <button class="btn-download" onclick="downloadQR('@vuelo.CodigoVuelo')">Descargar QR</button>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="10" class="empty-state">No hay vuelos disponibles en este momento</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</main>
<!-- Carga del script de QRCode.js -->
<script src="https://cdn.jsdelivr.net/npm/qrcode/build/qrcode.min.js"></script>
<script src="~/js/tablaestadistica.js"></script>

<script>
       function generateQRs(vuelos) {
        console.log('Generando códigos QR...');

        vuelos.forEach(vuelo => {
            const qrCodeContainer = document.getElementById('qrcode-' + vuelo.codigoVuelo); // Seleccionar el contenedor del QR
            if (!qrCodeContainer) {
                console.error('No se encontró el contenedor para el vuelo con código: ' + vuelo.codigoVuelo);
                return; // Si no se encuentra el contenedor, no intentamos generar el QR
            }

            // Verificación de los datos del vuelo
            console.log(vuelo); // Muestra el objeto vuelo para asegurar que contiene los datos correctos

            const fechaSalida = vuelo.FechaSalida ? new Date(vuelo.FechaSalida).toLocaleDateString() : 'Fecha no disponible';
            const horaSalida = vuelo.HoraSalida || 'Hora no disponible';
            const fechaLlegada = vuelo.FechaLlegada ? new Date(vuelo.FechaLlegada).toLocaleDateString() : 'Fecha no disponible';
            const horaLlegada = vuelo.HoraLlegada || 'Hora no disponible';
            const aeropuertoOrigen = vuelo.AeropuertoOrigen || 'Aeropuerto no disponible';
            const ciudadOrigen = vuelo.CiudadOrigen || 'Ciudad no disponible';
            const paisOrigen = vuelo.PaisOrigen || 'País no disponible';

            // Creamos el contenido del QR con los datos del vuelo
            const qrData = `
                Código de Vuelo: ${vuelo.codigoVuelo}\n
                Fecha de Salida: ${fechaSalida} ${horaSalida}\n
                Fecha de Llegada: ${fechaLlegada} ${horaLlegada}\n
                Origen: ${aeropuertoOrigen}, ${ciudadOrigen} - ${paisOrigen}
            `;

            // Generar el QR Code y mostrarlo en la columna "Visualizar QR"
            QRCode.toDataURL(qrData, function (error, url) {
                if (error) {
                    console.error("Error generando el QR para el vuelo " + vuelo.codigoVuelo, error);
                } else {
                    console.log('QR generado correctamente para el vuelo ' + vuelo.codigoVuelo); // Confirmación
                    qrCodeContainer.innerHTML = `
                        <img src="${url}" alt="QR de ${vuelo.codigoVuelo}" class="qr-image" />
                    `; // Mostrar imagen del QR en la tabla
                }
            });
        });
    }

    function downloadQR(codigoVuelo) {
        const qrCodeContainer = document.getElementById('qrcode-' + codigoVuelo);
        const img = qrCodeContainer.querySelector('img'); // Selecciona la imagen generada
        if (img) {
            const link = document.createElement('a');
            link.href = img.src;
            link.download = `${codigoVuelo}_QR.png`; // Nombre del archivo descargado
            link.click();
        }
    }

    window.onload = function() {
        fetchVuelos(); // Llamamos a la función para obtener los vuelos al cargar la página
    };
</script>

        <div class="actions">
            <button class="action-btn" onclick="verVuelos()">Ver Vuelos</button>
            <button class="action-btn" onclick="verPromociones()">Ver Promociones</button>
            <button class="action-btn" onclick="verHistorial()">Ver Historial</button>
        </div>
    </div>
</main>

<!-- Footer -->
<footer class="footer">
</footer>

<script>
    function verVuelos() {
        window.location.href = '/Promotions/Vuelos';
    }

    function verPromociones() {
        window.location.href = '/Promotions/Promociones';
    }

    function verHistorial() {
        window.location.href = '/Promotions/Historial';
    }

    function scrollToFlights() {
        document.getElementById('flights-section').scrollIntoView({
            behavior: 'smooth'
        });
    }
</script>